// 类似 maven 里面的 build 段

/**
 * 插件列表在最先
 */
plugins {
	// id 是 plugin 的一个方法
	id 'java'
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java-library'
}

allprojects {
	group = 'com.magicliang.data-intensive-application'
	version = '0.0.1-SNAPSHOT'

	// 一行指定兼容性
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	plugins.withType(JavaPlugin).whenPluginAdded {
		dependencies {
			constraints {
				// 一般的依赖则使用 scope 别名来引用
//				compileOnly 'org.projectlombok:lombok'
			}
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

/**
 * 只提供坐标，不提供版本的依赖列表
 */
dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
}

// 指定插件作用于子项目
subprojects {
	// 插件 apply plugin，version 语法不一样
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
		jcenter()
	}
	// 标准地为子项目引入依赖的方式
	dependencies {
		// 一般的依赖则使用 scope 别名来引用
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'io.projectreactor:reactor-test'

		implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'

		testImplementation('org.springframework.boot:spring-boot-starter-test') {
//					exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}

	test {
		useJUnitPlatform()
	}
}

bootJar {
	enabled = false
}